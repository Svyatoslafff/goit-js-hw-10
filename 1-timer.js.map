{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// #region Settings and basic functions\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n        \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    return { days, hours, minutes, seconds };\n};\n\nfunction normalizeTimerDate(date) {\n    date = `${date}`;\n    if (date.length < 2) {\n        return `0${date}`;\n    } else {\n        return date;\n    }\n};\n\nlet chosenDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        calendar.verifyDate(selectedDates[0]);\n    },\n};\n\n// #endregion Settings and basic functions\n\n// #region Timer\n\nconst calendar = {\n    dateInput: document.querySelector('#datetime-picker'),\n    button: document.querySelector('.calendar-container button[data-start]'),\n    verifyDate(date) {\n        if (date.getTime() > Date.now() && timer.seconds.textContent == 0) {\n            calendar.button.dataset.start = 'active';\n            chosenDate = date.getTime(); \n        } else {\n            calendar.button.dataset.start = 'inactive';\n            if (timer.seconds.textContent == 0) {\n                calendar.invalidDateAlert(); \n            } else {\n                calendar.timerIsRunningAlert();\n            }\n        }\n    },\n    invalidDateAlert() {\n        iziToast.warning({\n            title: 'Invalid date',\n            message: 'Please choose a date in the future',\n            position: 'topRight',\n            color: 'red',\n            iconUrl: './img/close-outlined.svg',\n            timeout: 5000,\n        })\n    },\n    timerIsRunningAlert() {\n        iziToast.warning({\n            title: 'Timer is running',\n            message: 'Please wait until timer ends',\n            position: 'topRight',\n            color: 'red',\n            iconUrl: './img/close-outlined.svg',\n            timeout: 5000,\n        })\n    }\n}\n\nconst timer = {\n    days: document.querySelector('.timer span[data-days]'),\n    hours: document.querySelector('.timer span[data-hours]'),\n    minutes: document.querySelector('.timer span[data-minutes]'),\n    seconds: document.querySelector('.timer span[data-seconds]'),\n    setTimer() {\n        if (calendar.button.dataset.start === 'active') { \n            calendar.button.dataset.start = 'inactive';\n\n            let initialDate = Date.now();\n            initialDate = timer.setTimerDate(initialDate);\n            \n            const intervalId = setInterval(() => {\n                if (!(chosenDate - initialDate >= 0)) {\n                    clearInterval(intervalId);\n                    iziToast.success({\n                        title: 'Succes',\n                        message: 'Timer has ended',\n                        position: 'topRight',\n                        timeout: 5000,\n                    })\n                } else {\n                    initialDate = timer.setTimerDate(initialDate);\n                }\n            }, 1000)\n        } else {\n            if (timer.seconds.textContent == 0) {\n                calendar.invalidDateAlert(); \n\n            } else {\n                calendar.timerIsRunningAlert();\n\n            }\n        }\n    },\n    setTimerDate(initialDate) {\n        let { days, hours, minutes, seconds } = convertMs(chosenDate - initialDate);\n\n        timer.days.textContent = normalizeTimerDate(days);\n        timer.hours.textContent = normalizeTimerDate(hours);\n        timer.minutes.textContent = normalizeTimerDate(minutes);\n        timer.seconds.textContent = normalizeTimerDate(seconds);\n\n        return initialDate += 1000;\n    }\n}\n\nflatpickr('#datetime-picker', options);\ncalendar.button.addEventListener('click', timer.setTimer);\n\n// #endregion Timer"],"names":["convertMs","ms","days","hours","minutes","seconds","normalizeTimerDate","date","chosenDate","options","selectedDates","calendar","timer","iziToast","initialDate","intervalId","flatpickr"],"mappings":"0IAOA,SAASA,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAmBC,EAAM,CAE9B,OADAA,EAAO,GAAGA,CAAI,GACVA,EAAK,OAAS,EACP,IAAIA,CAAI,GAERA,CAEf,CAEA,IAAIC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBC,EAAS,WAAWD,EAAc,CAAC,CAAC,CACvC,CACL,EAMMC,EAAW,CACb,UAAW,SAAS,cAAc,kBAAkB,EACpD,OAAQ,SAAS,cAAc,wCAAwC,EACvE,WAAWJ,EAAM,CACTA,EAAK,QAAS,EAAG,KAAK,IAAK,GAAIK,EAAM,QAAQ,aAAe,GAC5DD,EAAS,OAAO,QAAQ,MAAQ,SAChCH,EAAaD,EAAK,YAElBI,EAAS,OAAO,QAAQ,MAAQ,WAC5BC,EAAM,QAAQ,aAAe,EAC7BD,EAAS,iBAAgB,EAEzBA,EAAS,oBAAmB,EAGvC,EACD,kBAAmB,CACfE,EAAS,QAAQ,CACb,MAAO,eACP,QAAS,qCACT,SAAU,WACV,MAAO,MACP,QAAS,2BACT,QAAS,GACrB,CAAS,CACJ,EACD,qBAAsB,CAClBA,EAAS,QAAQ,CACb,MAAO,mBACP,QAAS,+BACT,SAAU,WACV,MAAO,MACP,QAAS,2BACT,QAAS,GACrB,CAAS,CACJ,CACL,EAEMD,EAAQ,CACV,KAAM,SAAS,cAAc,wBAAwB,EACrD,MAAO,SAAS,cAAc,yBAAyB,EACvD,QAAS,SAAS,cAAc,2BAA2B,EAC3D,QAAS,SAAS,cAAc,2BAA2B,EAC3D,UAAW,CACP,GAAID,EAAS,OAAO,QAAQ,QAAU,SAAU,CAC5CA,EAAS,OAAO,QAAQ,MAAQ,WAEhC,IAAIG,EAAc,KAAK,MACvBA,EAAcF,EAAM,aAAaE,CAAW,EAE5C,MAAMC,EAAa,YAAY,IAAM,CAC3BP,EAAaM,GAAe,EAS9BA,EAAcF,EAAM,aAAaE,CAAW,GAR5C,cAAcC,CAAU,EACxBF,EAAS,QAAQ,CACb,MAAO,SACP,QAAS,kBACT,SAAU,WACV,QAAS,GACjC,CAAqB,EAIR,EAAE,GAAI,CACnB,MACgBD,EAAM,QAAQ,aAAe,EAC7BD,EAAS,iBAAgB,EAGzBA,EAAS,oBAAmB,CAIvC,EACD,aAAaG,EAAa,CACtB,GAAI,CAAE,KAAAZ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAAUQ,EAAaM,CAAW,EAE1E,OAAAF,EAAM,KAAK,YAAcN,EAAmBJ,CAAI,EAChDU,EAAM,MAAM,YAAcN,EAAmBH,CAAK,EAClDS,EAAM,QAAQ,YAAcN,EAAmBF,CAAO,EACtDQ,EAAM,QAAQ,YAAcN,EAAmBD,CAAO,EAE/CS,GAAe,GACzB,CACL,EAEAE,EAAU,mBAAoBP,CAAO,EACrCE,EAAS,OAAO,iBAAiB,QAASC,EAAM,QAAQ"}