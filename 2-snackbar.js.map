{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\niziToast.settings({\n    position: \"topRight\",\n})\n\nconst snackbar = {\n    form: document.querySelector('.form'),\n    inputDelay: document.querySelector('input[name=delay]'),\n    submitButtom: document.querySelector('.form>button'),\n    makePromise(event) {\n        event.preventDefault();\n        const promiseType = document.querySelector('input[name=state]:checked').value;\n        const delay = snackbar.inputDelay.value;\n        \n        new Promise((resolve, reject) => {\n            const timeoutId = setTimeout(() => {\n                if (promiseType == 'fulfilled') {\n                    resolve();\n                } else {\n                    reject();\n                }\n            }, delay);\n        })\n            .then(() => {\n                iziToast.success({\n                    title: 'Fulfilled',\n                    message: `promise in ${delay} ms` ,\n                })\n            })\n            .catch(() => {\n                iziToast.warning({\n                    title: 'Rejected',\n                    message: `promise in ${delay} ms`,\n                })\n            })\n    }\n}\n\nsnackbar.form.addEventListener('submit', snackbar.makePromise)\n"],"names":["iziToast","snackbar","event","promiseType","delay","resolve","reject"],"mappings":"wIAGAA,EAAS,SAAS,CACd,SAAU,UACd,CAAC,EAED,MAAMC,EAAW,CACb,KAAM,SAAS,cAAc,OAAO,EACpC,WAAY,SAAS,cAAc,mBAAmB,EACtD,aAAc,SAAS,cAAc,cAAc,EACnD,YAAYC,EAAO,CACfA,EAAM,eAAc,EACpB,MAAMC,EAAc,SAAS,cAAc,2BAA2B,EAAE,MAClEC,EAAQH,EAAS,WAAW,MAElC,IAAI,QAAQ,CAACI,EAASC,IAAW,CACX,WAAW,IAAM,CAC3BH,GAAe,YACfE,IAEAC,GAEP,EAAEF,CAAK,CACpB,CAAS,EACI,KAAK,IAAM,CACRJ,EAAS,QAAQ,CACb,MAAO,YACP,QAAS,cAAcI,CAAK,KAChD,CAAiB,CACjB,CAAa,EACA,MAAM,IAAM,CACTJ,EAAS,QAAQ,CACb,MAAO,WACP,QAAS,cAAcI,CAAK,KAChD,CAAiB,CACjB,CAAa,CACR,CACL,EAEAH,EAAS,KAAK,iBAAiB,SAAUA,EAAS,WAAW"}